{"version":3,"sources":["components/utils/Axios.js","components/Signup/Signup.js","components/utils/setAxiosAuthToken.js","components/utils/checkIsUserIsAuth.js","components/Login/Login.js","components/Home/Home.js","components/Nav/Nav.js","components/Recipe/RecipeList.js","components/Recipe/Recipe.js","components/SavedRecipes/SavedRecipeList.js","components/SavedRecipes/SavedRecipes.js","components/Grocery/GroceryList.js","components/common/Button.js","components/Grocery/Grocery.js","components/Friends/FriendList.js","components/Friends/Friends.js","components/Friends/CreateFriend.js","components/PrivateRoute/PrivateRoute.js","MainRouter.js","App.js","index.js"],"names":["Axios","axios","create","baseURL","process","REACT_APP_AXIOS","timeout","Signup","state","firstName","lastName","userName","email","password","confirmPassword","firstNameError","lastNameError","userNameError","emailError","passwordError","confirmPasswordError","isButtonDisabled","firstNameOnFocus","lastNameOnFocus","emailOnFocus","userNameOnFocus","passwordOnFocus","onConfirmPasswordOnFocus","handleOnChange","event","setState","target","name","value","handleFirstNameAndLastNameInput","handleUsernameInput","handlePasswordInput","handleEmailInput","length","isAlpha","placeholder","isAlphanumeric","isEmail","isStrongPassword","handleOnBlur","handleInputOnFocus","handleOnSubmit","a","preventDefault","userInputObj","post","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","props","history","push","console","log","error","response","data","message","prevProps","prevState","this","confirmPasswordOnFocus","className","onSubmit","type","id","required","onChange","onBlur","onFocus","autoFocus","disabled","Component","setAxiosAuthToken","jwtToken","defaults","headers","common","checkIfUserIsAuth","getJwtToken","window","localStorage","getItem","currentTime","Date","now","jwtDecode","exp","Login","submitButtonDisabled","isEmpty","result","payload","decodedToken","handleUserLogin","setItem","status","style","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","overflow","backgroundAttachment","width","height","Home","display","justifyContent","to","readOnly","onClick","Nav","open","handleSideNavToggle","handleUserLogout","removeItem","user","src","alt","transform","activeClassName","activeStyle","borderBottom","RecipeList","loading","textAlign","marginTop","recipes","slice","prevNum","nextNum","map","item","index","Card","Title","recipe","label","Img","variant","image","Body","ingredients","ingredient","text","handleAddToFavorites","handleAddToShoppingList","Recipe","search","diet","health","cuisineType","mealType","dishType","maxCalories","prevBtnDisabled","nextBtnDisabled","numOfRecipes","displaySearchForm","handleInputOnChange","handleOptionsOnChange","Array","from","selectedOptions","option","handleSearchRecipes","hits","count","dark","join","get","directionsUrl","url","savedRecipe","handleNewSearch","location","reload","handlePrevPage","handleNextPage","innerWidth","addEventListener","handleTextToFriend","color","multiple","size","fontSize","calories","handleTextClick","handleDeleteClick","_id","SavedRecipes","savedRecipes","showSavedRecipes","friendArray","selectedRecipe","selectedFriendFirstName","selectedFriendLastName","selectedFriendID","selectedFriendMobileNumber","recipeUrl","originalMessage","friendMessage","componentDidMount","handleGetAllFriends","getAllFriends","friends","delete","deletedRecipe","filteredArray","filter","handleFormSubmit","handleSelectChange","selectedUser","JSON","parse","mobileNumber","handleTextAreaEvent","SavedRecipeList","default","friend","stringify","col","rows","defaultValue","GroceryList","inputID","purchased","handleDeleteByID","handleDoneByID","handleEditByID1","Button","Fragment","handleClickFunction","buttonName","Grocery","groceryList","groceryInput","errorMessage","canEdit","editInput","handleTodoOnChange","findIndex","grocery","toLocaleLowerCase","createdGroceryItem","newArray","deletedGroceryItem","put","groceryIsPurchasedUpdated","updatedArray","passedEditInput","editId","handleEditByID2","editedGroceryItem","updatedGroceryArray","handleEditOnChange","sortByDate","sortOrder","sortedGroceryItems","sortByPurchased","isPurchased","isPurchasedGroceryArray","allGroceryItems","maxLength","handleCheckboxChecked","FriendList","toggle","handleToggle","handleUpdateFriendChange","handleUpdateClick","updatedFriend","handleUpdatedFriendData","deletedFriend","handleDeleteByFriend","Friend","CreateFriend","friendFirstName","friendLastName","friendMobileNumber","handleOnFriendChange","handleFriendSubmit","createdFriend","updatedFriendArray","Friends","PrivateRoute","component","rest","render","routerProps","MainRouter","exact","path","App","decodedJWTToken","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4366abd.chunk.js","sourcesContent":["import axios from 'axios';\nconst Axios = axios.create({\n  baseURL:\n    process.env.REACT_APP_AXIOS === 'development'\n      ? 'http://localhost:3001/api'\n      : 'https://appetizing-app.herokuapp.com/api',\n  timeout: 80000,\n});\nexport default Axios;\n","import React, { Component } from 'react';\nimport Axios from '../utils/Axios';\nimport { isAlpha, isEmail, isAlphanumeric, isStrongPassword } from 'validator';\nimport { toast } from 'react-toastify';\n// import checkIfUserIsAuth from \"../utils/checkIsUserIsAuth\";\nimport './Signup.css';\n\nexport class Signup extends Component {\n  state = {\n    firstName: '',\n    lastName: '',\n    userName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    firstNameError: '',\n    lastNameError: '',\n    userNameError: '',\n    emailError: '',\n    passwordError: '',\n    confirmPasswordError: '',\n    isButtonDisabled: true,\n    firstNameOnFocus: false,\n    lastNameOnFocus: false,\n    emailOnFocus: false,\n    userNameOnFocus: false,\n    passwordOnFocus: false,\n    onConfirmPasswordOnFocus: false,\n  };\n\n  handleOnChange = (event) => {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      },\n      () => {\n        if (\n          event.target.name === 'firstName' ||\n          event.target.name === 'lastName'\n        ) {\n          this.handleFirstNameAndLastNameInput(event);\n        }\n        if (event.target.name === 'userName') {\n          this.handleUsernameInput();\n        }\n        if (event.target.name === 'password') {\n          this.handlePasswordInput();\n        }\n        if (event.target.name === 'email') {\n          this.handleEmailInput();\n        }\n        if (event.target.name === 'password') {\n          this.handlePasswordInput();\n        }\n        if (event.target.name === 'confirmPassword') {\n          if (this.state.password !== this.state.confirmPassword) {\n            this.setState({\n              confirmPasswordError: 'Passwords do not match',\n              isButtonDisabled: true,\n            });\n          } else {\n            this.setState({\n              confirmPasswordError: '',\n            });\n          }\n        }\n      }\n    );\n  };\n\n  handleFirstNameAndLastNameInput = (event) => {\n    if (this.state[event.target.name].length > 0) {\n      if (isAlpha(this.state[event.target.name])) {\n        this.setState({\n          //bracket notation/dynamic use of code for first and last name reset error\n          [`${event.target.name}Error`]: '',\n        });\n      } else {\n        //bracket notation/dynamic use of code set error\n        this.setState({\n          [`${event.target.name}Error`]: `${event.target.placeholder} can only have alphabet`,\n          isButtonDisabled: true,\n        });\n      }\n    } else {\n      //bracket notation/dynamic use of code to set other error\n      this.setState({\n        [`${event.target.name}Error`]: `${event.target.placeholder} cannot be empty`,\n      });\n    }\n  };\n\n  handleUsernameInput = () => {\n    if (this.state.userName.length === 0) {\n      this.setState({\n        userNameError: 'User name cannot be empty',\n        isButtonDisabled: true,\n      });\n    } else {\n      if (isAlphanumeric(this.state.userName)) {\n        this.setState({\n          userNameError: '',\n        });\n      } else {\n        this.setState({\n          userNameError: 'User name cannot contain special characters',\n          isButtonDisabled: true,\n        });\n      }\n    }\n  };\n\n  handleEmailInput = () => {\n    if (this.state.email.length === 0) {\n      this.setState({\n        emailError: 'Email cannot be empty',\n        isButtonDisabled: true,\n      });\n    } else {\n      if (isEmail(this.state.email)) {\n        this.setState({\n          emailError: '',\n        });\n      } else {\n        this.setState({\n          emailError: 'Please enter a valid email',\n          isButtonDisabled: true,\n        });\n      }\n    }\n  };\n  handlePasswordInput = () => {\n    if (this.state.onConfirmPasswordOnFocus) {\n      if (this.state.password !== this.state.confirmPassword) {\n        this.setState({\n          confirmPasswordError: 'Password does not match',\n          isButtonDisabled: true,\n        });\n      } else {\n        this.setState({\n          confirmPasswordError: '',\n        });\n      }\n    }\n    if (this.state.password.length === 0) {\n      this.setState({\n        passwordError: 'Password cannot be empty',\n        isButtonDisabled: true,\n      });\n    } else {\n      if (isStrongPassword(this.state.password)) {\n        this.setState({\n          passwordError: '',\n        });\n      } else {\n        this.setState({\n          passwordError:\n            'Passwords must be at least 8 characters long, and contain at least one uppercase letter, lowercase letter, special character and number.',\n          isButtonDisabled: true,\n        });\n      }\n    }\n  };\n\n  handleOnBlur = (event) => {\n    if (this.state[event.target.name].length === 0) {\n      this.setState({\n        [`${event.target.name}Error`]: `${event.target.placeholder} cannot be empty`,\n      });\n    }\n  };\n\n  handleInputOnFocus = (event) => {\n    if (!this.state[`${event.target.name}OnFocus`]) {\n      this.setState({\n        [`${event.target.name}OnFocus`]: true,\n      });\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.isButtonDisabled === true) {\n      if (\n        this.state.firstNameOnFocus &&\n        this.state.lastNameOnFocus &&\n        this.state.emailOnFocus &&\n        this.state.userNameOnFocus &&\n        this.state.passwordOnFocus &&\n        this.state.confirmPasswordOnFocus\n      ) {\n        if (\n          this.state.firstNameError.length === 0 &&\n          this.state.lastNameError.length === 0 &&\n          this.state.userNameError.length === 0 &&\n          this.state.emailError.length === 0 &&\n          this.state.passwordError.length === 0 &&\n          this.state.confirmPasswordError.length === 0 &&\n          this.state.password === this.state.confirmPassword\n        ) {\n          this.setState({\n            isButtonDisabled: false,\n          });\n        }\n      }\n    }\n  }\n\n  handleOnSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let userInputObj = {\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        email: this.state.email,\n        userName: this.state.userName,\n        password: this.state.password,\n      };\n      await Axios.post('/user/sign-up', userInputObj);\n      toast.success(`User created - Please login`, {\n        position: 'top-center',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      this.props.history.push('/login');\n    } catch (e) {\n      console.log(e);\n      toast.error(`${e.response.data.message}`, {\n        position: 'top-center',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n  };\n\n  render() {\n    const {\n      firstNameError,\n      lastNameError,\n      userNameError,\n      emailError,\n      passwordError,\n      confirmPasswordError,\n    } = this.state;\n    return (\n      <div className='signup__body'>\n        <form className='signup__form' onSubmit={this.handleOnSubmit}>\n          <h1>Create an account</h1>\n          <div className='form-group'>\n            <label>Firstname</label>\n\n            <input\n              className='form-control-signup'\n              type='text'\n              name='firstName'\n              placeholder='First name'\n              id='firstName'\n              required\n              onChange={this.handleOnChange}\n              onBlur={this.handleOnBlur}\n              onFocus={this.handleInputOnFocus}\n              autoFocus\n            />\n          </div>\n          <div className='errorMessage'>{firstNameError && firstNameError}</div>\n          <div className='form-group'>\n            <label>Lastname</label>\n            <input\n              className='form-control-signup'\n              type='text'\n              name='lastName'\n              placeholder='Last name'\n              id='lastName'\n              required\n              onChange={this.handleOnChange}\n              onBlur={this.handleOnBlur}\n              onFocus={this.handleInputOnFocus}\n            />\n          </div>\n          <div className='errorMessage'>{lastNameError && lastNameError}</div>\n          <div className='form-group'>\n            <label>Username</label>\n            <input\n              className='form-control-signup'\n              type='text'\n              name='userName'\n              placeholder='User name'\n              id='userName'\n              required\n              onChange={this.handleOnChange}\n              onBlur={this.handleOnBlur}\n              onFocus={this.handleInputOnFocus}\n            />\n          </div>\n          <div className='errorMessage'>{userNameError && userNameError}</div>\n          <div className='form-group'>\n            <label>Email</label>\n            <input\n              className='form-control-signup'\n              type='text'\n              name='email'\n              placeholder='Email'\n              id='email'\n              required\n              onChange={this.handleOnChange}\n              onBlur={this.handleOnBlur}\n              onFocus={this.handleInputOnFocus}\n            />\n          </div>\n          <div className='errorMessage'>{emailError && emailError}</div>\n          <div className='form-group'>\n            <label>Password</label>\n            <input\n              className='form-control-signup'\n              type='password'\n              name='password'\n              placeholder='Password'\n              id='password'\n              required\n              onChange={this.handleOnChange}\n              onBlur={this.handleOnBlur}\n              onFocus={this.handleInputOnFocus}\n            />\n          </div>\n          <div className='errorMessage'>{passwordError && passwordError}</div>\n          <div className='form-group'>\n            <label>ConfirmPassword</label>\n            <input\n              className='form-control-signup'\n              type='password'\n              name='confirmPassword'\n              placeholder='Confirm password'\n              id='confirmPassword'\n              required\n              onChange={this.handleOnChange}\n              onBlur={this.handleOnBlur}\n              onFocus={this.handleInputOnFocus}\n            />\n          </div>\n          <div className='errorMessage'>\n            {confirmPasswordError && confirmPasswordError}\n          </div>\n          <div>\n            <ul className='list-inline'>\n              <li>\n                <input\n                  className='btn btn--form'\n                  type='submit'\n                  value='Signup'\n                  disabled={this.state.isButtonDisabled}\n                />\n              </li>\n            </ul>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import Axios from \"./Axios\";\nconst setAxiosAuthToken = (jwtToken) => {\n  if (jwtToken) {\n    Axios.defaults.headers.common[\"Authorization\"] = `Bearer ${jwtToken}`;\n  } else {\n    delete Axios.defaults.headers.common[\"Authorization\"];\n  }\n};\nexport default setAxiosAuthToken;","import jwtDecode from \"jwt-decode\";\nimport setAxiosAuthToken from \"./setAxiosAuthToken\";\nconst checkIfUserIsAuth = () => {\n  //check if token exists, if it doesnt exists return false\n  //if it does exists, check if token valid (meaning not expired)\n  //if expired return false\n  //else return true\n  let getJwtToken = window.localStorage.getItem(\"jwtToken\");\n  if (getJwtToken) {\n    const currentTime = Date.now() / 1000;\n    let decodedToken = jwtDecode(getJwtToken);\n    if (decodedToken.exp < currentTime) {\n      setAxiosAuthToken(null);\n      return false;\n    } else {\n      setAxiosAuthToken(getJwtToken);\n      return true;\n    }\n  } else {\n    return false;\n  }\n};\nexport default checkIfUserIsAuth;","import React, { Component } from 'react';\nimport { isEmpty } from 'validator';\nimport jwtDecode from 'jwt-decode';\nimport { toast } from 'react-toastify';\nimport Axios from '../utils/Axios';\nimport checkIfUserIsAuth from '../utils/checkIsUserIsAuth';\nimport setAxiosAuthToken from '../utils/setAxiosAuthToken';\n\nimport './Login.css';\n\nexport class Login extends Component {\n  state = {\n    email: '',\n    emailError: '',\n    emailOnFocus: false,\n    password: '',\n    passwordError: '',\n    passwordOnFocus: false,\n    submitButtonDisabled: true,\n  };\n\n  componentDidMount() {\n    let isAuth = checkIfUserIsAuth();\n    if (isAuth) {\n      this.props.history.push('/recipe');\n    }\n  }\n\n  handleOnChange = (event) => {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      },\n      () => {\n        if (event.target.name === 'email') {\n          if (isEmpty(this.state.email)) {\n            this.setState({\n              emailError: 'Email cannot be empty',\n              submitButtonDisabled: true,\n            });\n          } else {\n            this.setState({\n              emailError: '',\n            });\n          }\n        }\n        if (event.target.name === 'password') {\n          if (isEmpty(this.state.password)) {\n            this.setState({\n              passwordError: 'Password cannot be empty',\n              submitButtonDisabled: true,\n            });\n          } else {\n            this.setState({\n              passwordError: '',\n            });\n          }\n        }\n      }\n    );\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.submitButtonDisabled === true) {\n      if (this.state.emailOnFocus && this.state.passwordOnFocus) {\n        if (\n          this.state.emailError.length === 0 &&\n          this.state.passwordError.length === 0\n        ) {\n          this.setState({\n            submitButtonDisabled: false,\n          });\n        } else {\n          this.setState({\n            submitButtonDisabled: true,\n          });\n        }\n      }\n    }\n  }\n\n  handleInputOnFocus = (event) => {\n    if (!this.state[`${event.target.name}OnFocus`]) {\n      this.setState({\n        [`${event.target.name}OnFocus`]: true,\n      });\n    }\n  };\n  handleOnSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      let result = await Axios.post('/user/login', {\n        email: this.state.email,\n        password: this.state.password,\n      });\n      let jwtToken = result.data.payload;\n\n      //setting jwt token to out Axios instance\n      setAxiosAuthToken(jwtToken);\n\n      let decodedToken = jwtDecode(jwtToken);\n\n      this.props.handleUserLogin(decodedToken);\n      window.localStorage.setItem('jwtToken', jwtToken);\n      toast.success('Login success!');\n      this.props.history.push('/recipe');\n    } catch (e) {\n      console.log('error here----', e);\n      if (e.response.status === 429) {\n        toast.error(e.response.data);\n      } else {\n        toast.error(e.response.data.payload);\n      }\n    }\n  };\n  render() {\n    const { email, emailError, password, passwordError, submitButtonDisabled } =\n      this.state;\n    return (\n      <div\n        className='login_body'\n        style={{\n          backgroundImage:\n            'linear-gradient(rgba(0, 0, 0, 0.1),rgba(0, 0, 0, 0.5)), url(banner.png)',\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n          backgroundRepeat: 'no-repeat',\n          overflow: 'hidden',\n          backgroundAttachment: 'fixed',\n          width: '100vw',\n          height: '100vh',\n        }}\n      >\n        <form className='login__form' onSubmit={this.handleOnSubmit}>\n          <h1>Log in</h1>\n          <br />\n          <br />\n          <br />\n          <div className='form-group'>\n            <label>Email</label>\n            <input\n              className='form-control'\n              type='email'\n              name='email'\n              placeholder='email'\n              id='email'\n              required\n              value={email}\n              onChange={this.handleOnChange}\n              onFocus={this.handleInputOnFocus}\n              autoFocus\n            />\n          </div>\n          <div className='errorMessage'>{emailError && emailError}</div>\n          <div className='form-group'>\n            <label>Password</label>\n            <input\n              className='form-control'\n              type='password'\n              name='password'\n              placeholder='Password'\n              id='password'\n              required\n              value={password}\n              onChange={this.handleOnChange}\n              onFocus={this.handleInputOnFocus}\n            />\n          </div>\n          <div className='errorMessage'>{passwordError && passwordError}</div>\n          <div className='m-t-lg'>\n            <ul className='list-inline'>\n              <li>\n                <input\n                  className='btn btn--form'\n                  type='submit'\n                  value='Login'\n                  disabled={submitButtonDisabled}\n                />\n              </li>\n            </ul>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Axios from '../utils/Axios';\nimport jwtDecode from 'jwt-decode';\nimport { toast } from 'react-toastify';\nimport setAxiosAuthToken from '../utils/setAxiosAuthToken';\nimport './Home.css';\nexport class Home extends Component {\n  handleOnSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      let result = await Axios.post('/user/login', {\n        email: 'a@a.com',\n        password: 'Apple251#',\n      });\n      let jwtToken = result.data.payload;\n      //setting jwt token to out Axios instance\n      setAxiosAuthToken(jwtToken);\n\n      let decodedToken = jwtDecode(jwtToken);\n\n      this.props.handleUserLogin(decodedToken);\n      window.localStorage.setItem('jwtToken', jwtToken);\n      toast.success('Login success!');\n      this.props.history.push('/recipe');\n    } catch (e) {\n      console.log(e);\n      if (e.response.status === 429) {\n        toast.error(e.response.data);\n      } else {\n        toast.error(e.response.data.payload);\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          width: '100vw',\n          height: '100vh',\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n      >\n        <div id='greeting'>\n          <h1>Welcome to app-etizing recipes!</h1>\n          <NavLink to='/sign-up'>\n            <input className='btn home-btn' value='Signup' readOnly />\n          </NavLink>\n          <input\n            className='btn home-btn'\n            value='Guest user'\n            onClick={this.handleOnSubmit}\n            readOnly\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport setAxiosAuthToken from '../utils/setAxiosAuthToken';\nimport './Nav.css';\n\nexport class Nav extends Component {\n  state = {\n    open: false,\n  };\n\n  handleSideNavToggle = () => {\n    if (this.state.open) {\n      this.setState({\n        open: false,\n      });\n    }\n  };\n  handleUserLogout = () => {\n    this.handleSideNavToggle();\n    window.localStorage.removeItem('jwtToken');\n    setAxiosAuthToken(null);\n    this.setState({\n      user: null,\n    });\n    this.props.history.push('/');\n  };\n  render() {\n    return (\n      <>\n        <header>\n          <nav>\n            {this.props.user ? (\n              <img id='logo' src='appetizing-logo.png' alt='logo' />\n            ) : (\n              <Link to='/'>\n                <img id='logo' src='appetizing-logo.png' alt='logo' />\n              </Link>\n            )}\n            <ul\n              className='nav-links'\n              style={{\n                transform: this.state.open ? 'translateX(0px)' : '',\n              }}\n            >\n              <li>\n                {this.state.open ? (\n                  <Link to='/'>\n                    <img\n                      id='logo-side-nav'\n                      src='appetizing-logo.png'\n                      alt='logo'\n                      onClick={() => this.handleSideNavToggle()}\n                    />\n                  </Link>\n                ) : (\n                  ''\n                )}\n              </li>\n              <li>\n                {this.props.user ? (\n                  <NavLink\n                    activeClassName='selected'\n                    to='/recipe'\n                    activeStyle={{ borderBottom: '1px solid #00ff00' }}\n                    onClick={() => this.handleSideNavToggle()}\n                  >\n                    Recipes\n                  </NavLink>\n                ) : (\n                  ''\n                )}\n              </li>\n              <li>\n                {this.props.user ? (\n                  <NavLink\n                    activeClassName='selected'\n                    to='/grocery'\n                    activeStyle={{ borderBottom: '1px solid #00ff00' }}\n                    onClick={() => this.handleSideNavToggle()}\n                  >\n                    Shopping List\n                  </NavLink>\n                ) : (\n                  ''\n                )}\n              </li>\n              <li>\n                {this.props.user ? (\n                  <NavLink\n                    activeClassName='selected'\n                    to='/friends'\n                    activeStyle={{ borderBottom: '1px solid #00ff00' }}\n                    onClick={() => this.handleSideNavToggle()}\n                  >\n                    Friends\n                  </NavLink>\n                ) : (\n                  ''\n                )}\n              </li>\n\n              <li>\n                {this.props.user ? (\n                  <NavLink\n                    activeClassName='selected'\n                    to='/saved-recipes'\n                    activeStyle={{ borderBottom: '1px solid #00ff00' }}\n                    onClick={() => this.handleSideNavToggle()}\n                  >\n                    Saved Recipes\n                  </NavLink>\n                ) : (\n                  ''\n                )}\n              </li>\n\n              <li>\n                {this.props.user ? (\n                  ''\n                ) : (\n                  <NavLink\n                    to='/sign-up'\n                    activeClassName='selected'\n                    activeStyle={{ borderBottom: '1px solid #00ff00' }}\n                    onClick={() => this.handleSideNavToggle()}\n                  >\n                    Sign Up\n                  </NavLink>\n                )}\n              </li>\n              <li>\n                {this.props.user ? (\n                  <NavLink to='/' onClick={this.props.handleUserLogout}>\n                    Logout\n                  </NavLink>\n                ) : (\n                  <NavLink\n                    activeStyle={{ borderBottom: '1px solid #00ff00' }}\n                    to='/login'\n                    onClick={() => this.handleSideNavToggle()}\n                  >\n                    Login\n                  </NavLink>\n                )}\n              </li>\n            </ul>\n            <i\n              onClick={() =>\n                this.setState({\n                  open: !this.state.open,\n                })\n              }\n              className='fas fa-bars burger'\n            ></i>\n          </nav>\n        </header>\n      </>\n    );\n  }\n}\nexport default Nav;\n","import React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nfunction RecipeList(props) {\n  \n  function loadCard() {\n    return props.recipes.slice(props.prevNum, props.nextNum).map((item, index) => {\n      return (\n        <Card key={index}>\n          <Card.Title className=\"card-title\">{item.recipe.label}</Card.Title>\n          <Card.Img variant=\"top\" src={item.recipe.image} />\n          <Card.Body>\n            <br />\n            <div className=\"ingredients-title\">Ingredients</div>\n            <hr />\n            <div\n              className=\"ingredients-container\"\n              style={{ textAlign: \"center\" }}\n            >\n              <ul>\n                {item.recipe.ingredients.map((ingredient, index) => {\n                  return <li key={index}>{ingredient.text}</li>;\n                })}\n              </ul>\n            </div>\n            <div className=\"button-container\">\n              <Button\n                onClick={() => {\n                  props.handleAddToFavorites(item);\n                }}\n              >\n                Save recipe \n              </Button>\n              <Button\n                onClick={() => {\n                  props.handleAddToShoppingList(item);\n                }}\n              >\n                Add to shopping list\n              </Button>\n            </div>\n          </Card.Body>\n        </Card>\n      );\n    });\n  }\n  return props.loading ? (\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>...Loading</div>\n  ) : (\n    loadCard()\n  );\n}\nexport default RecipeList;\n\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Axios from '../utils/Axios';\nimport { toast } from 'react-toastify';\nimport RecipeList from './RecipeList';\nimport './Recipe.css';\nexport class Recipe extends Component {\n  state = {\n    search: '',\n    diet: [],\n    health: [],\n    cuisineType: '',\n    mealType: '',\n    dishType: '',\n    maxCalories: '',\n    recipes: [],\n    loading: false,\n    prevBtnDisabled: true,\n    nextBtnDisabled: true,\n    numOfRecipes: 0,\n    prevNum: 0,\n    nextNum: 3,\n    displaySearchForm: true,\n  };\n  componentDidMount() {\n    if (window.innerWidth < 1001) {\n      this.setState({ nextNum: 1 });\n    } else {\n      this.setState({ nextNum: 3 });\n    }\n    window.addEventListener('resize', () => {\n      if (window.innerWidth < 1001) {\n        this.setState({ nextNum: 1 });\n      } else {\n        this.setState({ nextNum: 3 });\n      }\n    });\n  }\n\n  handleInputOnChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n  handleOptionsOnChange = (event) => {\n    //Here's our two variables\n    let target = event.target;\n    let name = target.name;\n\n    //Array.from creates a new array with a call back function\n    let value = Array.from(target.selectedOptions, (option) => option.value);\n\n    //set the state dynamically\n    this.setState({\n      [name]: value,\n    });\n  };\n  handleOnSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      let result = await this.handleSearchRecipes();\n\n      this.setState(\n        {\n          recipes: result.data.hits,\n          numOfRecipes: result.data.hits.length,\n        },\n        () => {\n          this.setState({\n            loading: false,\n          });\n        }\n      );\n\n      if (this.state.numOfRecipes > 3) {\n        this.setState({\n          nextBtnDisabled: false,\n        });\n      }\n\n      if (result.data.count === 0 || this.state.numOfRecipes === 0) {\n        return toast.dark(`Please search something else!`, {\n          position: 'top-center',\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n      this.setState({\n        displaySearchForm: false,\n      });\n      toast.success(`Recipes found!`, {\n        position: 'top-center',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    } catch (e) {\n      console.log(e);\n      toast.error(`${e.response.data.message}`, {\n        position: 'top-center',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n  };\n  handleSearchRecipes = async () => {\n    this.setState({\n      loading: true,\n    });\n    const search = this.state.search;\n    const diet = this.state.diet.join('');\n    const health = this.state.health.join('');\n    const cuisineType = this.state.cuisineType;\n    const mealType = this.state.mealType;\n    const dishType = this.state.dishType;\n    const maxCalories = this.state.maxCalories;\n\n    try {\n      let result = await axios.get(\n        `https://api.edamam.com/api/recipes/v2?type=public&q=${search}${diet}${health}${cuisineType}${mealType}${dishType}${maxCalories}&app_id=${process.env.REACT_APP_EDAMAM_ID}&app_key=${process.env.REACT_APP_EDAMAM_KEY}&random=true`\n      );\n      return result;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  handleAddToShoppingList = async (item) => {\n    try {\n      const ingredients = Array.from(item.recipe.ingredients, (item) => {\n        return item.text;\n      });\n\n      await Axios.post('/grocery/create-grocery-item', ingredients);\n      toast.success(`Ingredients saved!`, {\n        position: 'top-center',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  handleAddToFavorites = async (item) => {\n    const label = item.recipe.label;\n    const image = item.recipe.image;\n    const ingredients = Array.from(item.recipe.ingredients, (item) => {\n      return item.text;\n    });\n    const directionsUrl = item.recipe.url;\n\n    const savedRecipe = {\n      label: label,\n      image: image,\n      ingredients: ingredients,\n      directionsUrl: directionsUrl,\n    };\n    try {\n      await Axios.post('/recipe/create-recipe', savedRecipe);\n      toast.success(`Recipe saved!`, {\n        position: 'top-center',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  handleNewSearch = () => {\n    window.location.reload(false);\n  };\n\n  handlePrevPage = () => {\n    let prevNum = this.state.prevNum - 3;\n    let nextNum = this.state.nextNum - 3;\n    this.setState({\n      prevNum: prevNum,\n      nextNum: nextNum,\n    });\n    if (this.state.prevNum < 5) {\n      this.setState({\n        prevBtnDisabled: true,\n      });\n    }\n\n    this.setState({\n      nextBtnDisabled: false,\n    });\n  };\n\n  handleNextPage = () => {\n    let prevNum = this.state.prevNum + 3;\n    let nextNum = this.state.nextNum + 3;\n    this.setState({\n      prevNum: prevNum,\n      nextNum: nextNum,\n    });\n    if (nextNum >= this.state.numOfRecipes) {\n      this.setState({\n        nextBtnDisabled: true,\n      });\n    }\n\n    this.setState({\n      prevBtnDisabled: false,\n    });\n  };\n\n  render() {\n    return (\n      <div className='recipe_body'>\n        <div id='recipe-container-search'>\n          {this.state.displaySearchForm ? (\n            ''\n          ) : (\n            <div className='card-section'>\n              <RecipeList\n                prevNum={this.state.prevNum}\n                nextNum={this.state.nextNum}\n                recipes={this.state.recipes}\n                loading={this.state.loading}\n                handleTextToFriend={this.handleTextToFriend}\n                handleAddToShoppingList={this.handleAddToShoppingList}\n                handleAddToFavorites={this.handleAddToFavorites}\n              />\n            </div>\n          )}\n\n          {this.state.displaySearchForm ? (\n            <div className='recipe__form'>\n              <h1>Recipe search</h1>\n              <div className='logo-container'>\n                <img src='transparent.png' alt='edamam logo' />\n              </div>\n              <br />\n              <br />\n              <form onSubmit={this.handleOnSubmit}>\n                <div className='form-group'>\n                  <label>Search:&nbsp;&nbsp;</label>\n                  <input\n                    className='form-control'\n                    type='text'\n                    name='search'\n                    style={{ color: 'black' }}\n                    placeholder='search'\n                    id='search'\n                    onChange={this.handleInputOnChange}\n                    required\n                    autoFocus\n                  />\n                </div>\n\n                <br />\n                <div className='form-group'>\n                  <label>Diet:&nbsp;&nbsp;</label>\n                  <select\n                    multiple={true}\n                    style={{ color: 'black' }}\n                    id='diet'\n                    name='diet'\n                    size='3'\n                    value={this.state.diet}\n                    onChange={this.handleOptionsOnChange}\n                  >\n                    <option value=''>No selection</option>\n                    <option value='&diet=balanced'>balanced</option>\n                    <option value='&diet=high-fiber'>high-fiber</option>\n                    <option value='&diet=high-protein'>high-protein</option>\n                    <option value='&diet=low-carb'>low-carb</option>\n                  </select>\n                </div>\n\n                <div className='form-group'>\n                  <label>Health:&nbsp;&nbsp;</label>\n                  <select\n                    multiple={true}\n                    style={{ color: 'black' }}\n                    id='health'\n                    name='health'\n                    size='3'\n                    value={this.state.health}\n                    onChange={this.handleOptionsOnChange}\n                  >\n                    <option value=''>No selection</option>\n                    <option value='&health=alcohol-free'>alcohol-free</option>\n                    <option value='&health=celery-free'>celery-free</option>\n                    <option value='&health=crustacean-free'>\n                      crustacean-free\n                    </option>\n                    <option value='&health=egg-free'>egg-free</option>\n                    <option value='&health=fish-free'>fish-free</option>\n                    <option value='&health=fodmap-free'>fodmap-free</option>\n                    <option value='&health=immuno-supportive'>\n                      immuno-supportive\n                    </option>\n                    <option value='&health=keto-friendly'>keto-friendly</option>\n                    <option value='&health=kidney-friendly'>\n                      kidney-friendly\n                    </option>\n                    <option value='&health=kosher'>kosher</option>\n                    <option value='&health=low-fat-abs'>low-fat-abs</option>\n                    <option value='&health=low-sugar'>low-sugar</option>\n                    <option value='&health=lupine-free'>lupine-free</option>\n                    <option value='&health=mediterranean'>mediterranean</option>\n                    <option value='&health=mustard-free'>mustard-free</option>\n                    <option value='&health=no-oil-added'>no-oil-added</option>\n                    <option value='&health=paleo'>paleo</option>\n                    <option value='&health=peanut-free'>peanut-free</option>\n                    <option value='&health=pescatarian'>pescatarian</option>\n                    <option value='&health=pork-free'>pork-free</option>\n                    <option value='&health=red-meat-free'>red-meat-free</option>\n                    <option value='&health=sesame-free'>sesame-free</option>\n                    <option value='&health=shellfish-free'>\n                      shellfish-free\n                    </option>\n                    <option value='&health=soy-free'>soy-free</option>\n                    <option value='&health=sugar-conscious'>\n                      sugar-conscious\n                    </option>\n                    <option value='&health=tree-nut-free'>tree-nut-free</option>\n                    <option value='&health=vegan'>vegan</option>\n                    <option value='&health=vegitarian'>vegitarian</option>\n                    <option value='&health=wheat-free'>wheat-free</option>\n                  </select>\n                </div>\n\n                <div className='form-group'>\n                  <div>\n                    <label>Cuisine:&nbsp;&nbsp;</label>\n                    <div style={{ color: 'black', fontSize: '16px' }}></div>\n                  </div>\n                  <select\n                    style={{ color: 'black' }}\n                    id='cuisineType'\n                    name='cuisineType'\n                    size='3'\n                    value={this.state.cuisineType}\n                    onChange={this.handleInputOnChange}\n                    multiple={false}\n                  >\n                    <option value=''>No selection</option>\n                    <option value='&cuisineType=American'>American</option>\n                    <option value='&cuisineType=Asian'>Asian</option>\n                    <option value='&cuisineType=British'>British</option>\n                    <option value='&cuisineType=Caribbean'>Caribbean</option>\n                    <option value='&cuisineType=Central European'>\n                      Central European\n                    </option>\n                    <option value='&cuisineType=Chinese'>Chinese</option>\n                    <option value='&cuisineType=French'>French</option>\n                    <option value='&cuisineType=Indian'>Indian</option>\n                    <option value='&cuisineType=Italian'>Italian</option>\n                    <option value='&cuisineType=Japanese'>Japanese</option>\n                    <option value='&cuisineType=Italian'>Italian</option>\n                    <option value='&cuisineType=Kosher'>Kosher</option>\n                    <option value='&cuisineType=Mediterranean'>\n                      Mediterranean\n                    </option>\n                    <option value='&cuisineType=Mexican'>Mexican</option>\n                    <option value='&cuisineType=Middle Eastern'>\n                      Middle Eastern\n                    </option>\n                    <option value='&cuisineType=Nordic'>Nordic</option>\n                    <option value='&cuisineType=South American'>\n                      South American\n                    </option>\n                    <option value='&cuisineType=South East Asian'>\n                      South East Asian\n                    </option>\n                    <option value='&cuisineType=Nordic'>Nordic</option>\n                  </select>\n                </div>\n                <div className='form-group'>\n                  <div>\n                    <label>Meal:&nbsp;&nbsp;</label>\n                    <div style={{ color: 'black', fontSize: '16px' }}></div>\n                  </div>\n                  <select\n                    style={{ color: 'black' }}\n                    id='mealType'\n                    name='mealType'\n                    size='3'\n                    value={this.state.mealType}\n                    onChange={this.handleInputOnChange}\n                    multiple={false}\n                  >\n                    <option value='No selection'>No selection</option>\n                    <option value='&mealType=Breakfast'>Breakfast</option>\n                    <option value='&mealType=Lunch'>Lunch</option>\n                    <option value='&mealType=Snack'>Snack</option>\n                    <option value='&mealType=Teatime'>Teatime</option>\n                    <option value='&mealType=Dinner'>Dinner</option>\n                  </select>\n                </div>\n                <div className='form-group'>\n                  <div>\n                    <label>Dish:&nbsp;&nbsp;</label>\n                    <div style={{ color: 'black', fontSize: '16px' }}></div>\n                  </div>\n                  <select\n                    style={{ color: 'black' }}\n                    id='dishType'\n                    name='dishType'\n                    size='3'\n                    value={this.state.dishType}\n                    onChange={this.handleInputOnChange}\n                    // multiple={false}\n                  >\n                    <option value=''>No selection</option>\n                    <option value='&dishType=Biscuits and Cookies'>\n                      Biscuits and Cookies\n                    </option>\n                    <option value='&dishType=Bread'>Bread</option>\n                    <option value='&dishType=Cereals'>Cereals</option>\n                    <option value='&dishType=Condiments and sauces'>\n                      Condiments and sauces\n                    </option>\n                    <option value='&dishType=Desserts'>Desserts</option>\n                    <option value='&dishType=Drinks'>Drinks</option>\n                    <option value='&dishType=Main Course'>Main Course</option>\n                    <option value='&dishType=Pancake'>Pancake</option>\n                    <option value='&dishType=Preps'>Preps</option>\n                    <option value='&dishType=Preserve'>Preserve</option>\n                    <option value='&dishType=Salad'>Salad</option>\n                    <option value='&dishType=Sandwiches'>Sandwiches</option>\n                    <option value='&dishType=Side dish'>Side dish</option>\n                    <option value='&dishType=Soup'>Soup</option>\n                    <option value='&dishType=Starter'>Starter</option>\n                    <option value='&dishType=Sweets'>Sweets</option>\n                  </select>\n                </div>\n                <div className='form-group'>\n                  <div>\n                    <label>Maxcalories:&nbsp;&nbsp;</label>\n                    <div style={{ color: 'black', fontSize: '16px' }}></div>\n                  </div>\n                  <select\n                    style={{ color: 'black' }}\n                    id='maxCalories'\n                    name='maxCalories'\n                    size='3'\n                    value={this.state.calories}\n                    onChange={this.handleInputOnChange}\n                    multiple={false}\n                  >\n                    <option value=''>No selection</option>\n                    <option value='&calories=10'>10</option>\n                    <option value='&calories=30'>30</option>\n                    <option value='&calories=100'>100</option>\n                    <option value='&calories=300'>300</option>\n                    <option value='&calories=600'>600</option>\n                    <option value='&calories=700'>700</option>\n                    <option value='&calories=800'>800</option>\n                    <option value='&calories=900'>900</option>\n                    <option value='&calories=1000'>1000</option>\n                    <option value='&calories=1200'>1200</option>\n                    <option value='&calories=1400'>1400</option>\n                    <option value='&calories=1600'>1600</option>\n                    <option value='&calories=1800'>1800</option>\n                    <option value='&calories=2000'>2000</option>\n                    <option value='&calories=2200'>2200</option>\n                    <option value='&calories=2400'>2400</option>\n                    <option value='&calories=2600'>2600</option>\n                    <option value='&calories=2800'>2800</option>\n                    <option value='&calories=3000'>3000</option>\n                  </select>\n                </div>\n                <div className='m-t-lg'>\n                  <ul className='list-inline'>\n                    <li>\n                      <input\n                        className='btn btn--form'\n                        type='submit'\n                        value='Search'\n                      />\n                    </li>\n                  </ul>\n                </div>\n              </form>\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n        {!this.state.displaySearchForm ? (\n          <div className='paginate-buttons '>\n            <button\n              className='btn--form--recipe'\n              disabled={this.state.prevBtnDisabled}\n              onClick={this.handlePrevPage}\n            >\n              Prev\n            </button>\n            <button\n              className='btn--form--recipe new-search-button'\n              onClick={() => {\n                window.location.reload(false);\n              }}\n            >\n              NewSearch\n            </button>\n            <button\n              disabled={this.state.nextBtnDisabled}\n              className='btn--form--recipe'\n              onClick={this.handleNextPage}\n            >\n              Next\n            </button>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n}\nexport default Recipe;\n","import React from 'react';\nimport { Card, Button } from 'react-bootstrap';\nfunction RecipeList(props) {\n  function loadCard() {\n\n    return props.recipes.slice(0, 4).map((item, index) => {\n      return (\n        <Card key={index} className=\"card_saved\">\n          <Card.Title className=\"card-title\">{item.label}</Card.Title>\n          <Card.Img variant=\"top\" src={item.image} />\n          <Card.Body>\n            <br />\n            <div className=\"ingredients-title\">Ingredients</div>\n            <hr />\n            <div\n              className=\"ingredients-container\"\n              style={{ textAlign: 'center' }}\n            >\n              <ul>\n                {item.ingredients.map((ingredient, index) => {\n                  return <li key={index}>{ingredient}</li>;\n                })}\n              </ul>\n            </div>\n            <div className=\"button-container\">\n              <Button\n                 onClick={() => {\n                  props.handleTextClick(item)\n                }}\n              >\n                Text Recipe\n              </Button>\n              <Button\n                onClick={() => {\n                  window.open(item.directionsUrl);\n                }}\n              >\n                URL/Directions\n              </Button>\n              <Button\n                onClick={() => {\n                  props.handleDeleteClick(item._id)\n                }}\n              >\n                Delete Recipe\n              </Button>\n            </div>\n          </Card.Body>\n        </Card>\n      );\n    });\n  }\n  return props.loading ? (\n    <div style={{ textAlign: 'center', marginTop: '50px' }}>...Loading</div>\n  ) : (\n    loadCard()\n  );\n}\nexport default RecipeList;\n\n","import React, { Component } from 'react';\nimport SavedRecipeList from './SavedRecipeList';\nimport Axios from '../utils/Axios';\nimport { toast } from 'react-toastify';\nimport './SavedRecipes.css';\nexport class SavedRecipes extends Component {\n  state = {\n    savedRecipes: [],\n    showSavedRecipes: true,\n    friendArray: [],\n    selectedRecipe: {},\n    selectedFriendFirstName: '',\n    selectedFriendLastName: '',\n    selectedFriendID: '',\n    selectedFriendMobileNumber: '',\n    label: '',\n    ingredients: '',\n    recipeUrl: '',\n    originalMessage: '',\n    friendMessage: '',\n  };\n\n  componentDidMount = async () => {\n    this.handleGetAllFriends();\n    try {\n      const savedRecipes = await Axios.get('/recipe/get-all-recipes');\n      this.setState({\n        savedRecipes: savedRecipes.data.recipes,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  handleGetAllFriends = async () => {\n    try {\n      let getAllFriends = await Axios.get('/friend/get-all-friends');\n      this.setState({\n        friendArray: getAllFriends.data.friends,\n      });\n    } catch (e) {\n      console.log(e);\n      // toast.error(e.response.data.payload);\n    }\n  };\n\n  handleDeleteClick = async (id) => {\n    try {\n      let deletedRecipe = await Axios.delete(\n        `/recipe//delete-recipe-by-id/${id}`\n      );\n      let filteredArray = this.state.savedRecipes.filter(\n        (item) => item._id !== deletedRecipe.data.payload._id\n      );\n      this.setState({\n        savedRecipes: filteredArray,\n      });\n\n      toast.success(`Recipe deleted!`, {\n        position: 'top-center',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    } catch (e) {\n      toast.error(e.response.data.payload);\n    }\n  };\n\n  handleTextClick = (recipe) => {\n    let label = recipe.label;\n    let ingredients = recipe.ingredients.join();\n    let recipeUrl = recipe.directionsUrl;\n\n    this.setState({\n      showSavedRecipes: false,\n      label: label,\n      ingredients: ingredients,\n      recipeUrl: recipeUrl,\n    });\n  };\n\n  handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      let message = this.state.friendMessage;\n\n      await Axios.post('/twilio/send-sms', {\n        to: this.state.selectedFriendMobileNumber,\n        message: message,\n      });\n\n      toast.success(`Text message sent!`, {\n        position: 'top-center',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      this.setState({\n        showSavedRecipes: true,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  handleSelectChange = (event) => {\n    let selectedUser = JSON.parse(event.target.value);\n    this.setState(\n      {\n        selectedFriendFirstName: selectedUser.firstName,\n        selectedFriendLastName: selectedUser.lastName,\n        selectedFriendID: selectedUser._id,\n        selectedFriendMobileNumber: selectedUser.mobileNumber,\n        originalMessage: `Hey ${selectedUser.firstName}, check this recipe out called ${this.state.label}.\n      The ingredients are ${this.state.ingredients}.\n      Here is a link to the complete instructions: ${this.state.recipeUrl} `,\n        friendMessage: `Hey ${selectedUser.firstName}, check this recipe out called ${this.state.label}.\n      The ingredients are ${this.state.ingredients}.\n      Here is a link to the complete instructions: ${this.state.recipeUrl} `,\n      }\n    );\n  };\n  handleTextAreaEvent = (event) => {\n    this.setState({\n      friendMessage: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          backgroundImage:\n            'linear-gradient(rgba(0, 0, 0, 0.1),rgba(0, 0, 0, 0.5)), url(banner.png)',\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n          backgroundRepeat: 'no-repeat',\n          overflow: 'hidden',\n          backgroundAttachment: 'fixed',\n          width: '100vw',\n          height: '100vh',\n        }}\n      >\n        {this.state.showSavedRecipes ? (\n          <div className='saved-recipe-container'>\n            <SavedRecipeList\n              recipes={this.state.savedRecipes}\n              handleDeleteClick={this.handleDeleteClick}\n              handleTextClick={this.handleTextClick}\n            />\n          </div>\n        ) : (\n          <div className='saved-recipe-form-container'>\n            <form onSubmit={this.handleFormSubmit} className='text-form'>\n              <label>Choose a friend:</label>\n              <select\n                onChange={this.handleSelectChange}\n                name='friend'\n                id='friend'\n              >\n                <option default>Please select friend</option>\n                {this.state.friendArray.map((friend, index) => {\n                  return (\n                    <option key={friend._id} value={JSON.stringify(friend)}>\n                      {friend.firstName} {friend.lastName}\n                    </option>\n                  );\n                })}\n              </select>\n              <textarea\n                col='50'\n                rows='20'\n                defaultValue={this.state.originalMessage}\n                onChange={(event) => {\n                  this.handleTextAreaEvent(event);\n                }}\n              />\n              <br />\n              <button className='btn'>Submit</button>\n            </form>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default SavedRecipes;\n","import React, { Component } from 'react';\nexport class GroceryList extends Component {\n  render() {\n    const { item, inputID, purchased } = this.props;\n    const { handleDeleteByID, handleDoneByID, handleEditByID1, } = this.props;\n\n    return (\n      <div className=\"task-row\">\n        <div className=\"class-row\">\n          <p\n            className={`${purchased ? 'complete' : ''}`}\n            onClick={() => {\n              handleDoneByID(inputID, purchased);\n            }}\n          >\n            {item}\n          </p>\n        </div>\n        <div className=\"class-row\">\n          <i\n            className=\"fas fa-edit\"\n            id=\"edit0\"\n            onClick={() => {\n              handleEditByID1(inputID, item);\n            }}\n          ></i>\n          <i\n            className=\"fas fa-trash-alt\"\n            id=\"delete0\"\n            onClick={() => {\n              handleDeleteByID(inputID);\n            }}\n          ></i>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GroceryList;\n","import React, { Component } from 'react';\n\nexport class Button extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <button\n          onClick={() => this.props.handleClickFunction()}\n          className={this.props.className}\n        >\n          {this.props.buttonName}\n        </button>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Button;\n","import React, { Component } from 'react';\nimport GroceryList from './GroceryList';\nimport Button from '../common/Button';\nimport Axios from '../utils/Axios';\nimport './Grocery.css';\nexport class Grocery extends Component {\n  state = {\n    groceryList: [],\n    groceryInput: '',\n    error: null,\n    errorMessage: '',\n    canEdit: false,\n    editInput: '',\n  };\n\n  async componentDidMount() {\n    try {\n      let allGroceryItems = await Axios.get('/grocery/get-all-grocery-items');\n\n      this.setState({\n        groceryList: allGroceryItems.data.payload.grocery,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  handleTodoOnChange = (event) => {\n    this.setState({\n      groceryInput: event.target.value,\n      error: null,\n      errorMessage: '',\n    });\n  };\n  handleOnSubmit = async () => {\n    if (this.state.groceryInput.length === 0) {\n      this.setState({\n        error: true,\n        errorMessage: 'Input field can not be empty!',\n      });\n    } else {\n      let checkIfGroceryItemAlreadyExists = this.state.groceryList.findIndex(\n        (item) =>\n          item.grocery.toLocaleLowerCase() ===\n          this.state.groceryInput.toLocaleLowerCase()\n      );\n      if (checkIfGroceryItemAlreadyExists > -1) {\n        this.setState({\n          error: true,\n          errorMessage: 'Grocery item already exists',\n        });\n      } else {\n        try {\n          let createdGroceryItem = await Axios.post(\n            `/grocery/create-grocery-item`,\n            {\n              grocery: this.state.groceryInput,\n            }\n          );\n          let newArray = [\n            ...this.state.groceryList,\n            createdGroceryItem.data.payload,\n          ];\n          this.setState({\n            groceryList: newArray,\n            groceryInput: '',\n          });\n        } catch (e) {\n          console.log(e);\n        }\n        this.setState({\n          error: false,\n        });\n      }\n    }\n  };\n  handleDeleteByID = async (_id) => {\n    try {\n      let deletedGroceryItem = await Axios.delete(\n        `/grocery/delete-grocery-by-id/${_id}`\n      );\n      let filteredArray = this.state.groceryList.filter(\n        (item) => item._id !== deletedGroceryItem.data.payload._id\n      );\n      this.setState({\n        groceryList: filteredArray,\n      });\n    } catch (e) {\n      console.log('error', e);\n    }\n  };\n  handleDoneByID = async (_id, purchased) => {\n    try {\n      let groceryIsPurchasedUpdated = await Axios.put(\n        `/grocery/update-purchased-by-id/${_id}`,\n        {\n          purchased: !purchased,\n        }\n      );\n      let updatedArray = this.state.groceryList.map((item) => {\n        if (item._id === groceryIsPurchasedUpdated.data.payload._id) {\n          item.purchased = groceryIsPurchasedUpdated.data.payload.purchased;\n        }\n        return item;\n      });\n      this.setState({\n        groceryList: updatedArray,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  handleEditByID1 = (_id, passedEditInput) => {\n    this.setState({\n      canEdit: true,\n      editInput: passedEditInput,\n      editId: _id,\n    });\n  };\n  handleEditByID2 = async () => {\n    try {\n      let editedGroceryItem = await Axios.put(\n        `/grocery/update-grocery-by-id/${this.state.editId}`,\n        {\n          grocery: this.state.editInput,\n        }\n      );\n      let updatedGroceryArray = this.state.groceryList.map((item) => {\n        if (item._id === this.state.editId) {\n          item.grocery = editedGroceryItem.data.payload.grocery;\n        }\n        return item;\n      });\n      this.setState({\n        groceryList: updatedGroceryArray,\n        canEdit: false,\n        editInput: '',\n        editId: '',\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  handleInputOnChange = (event) => {\n    this.setState({\n      groceryInput: event.target.value,\n      error: null,\n    });\n  };\n  handleEditOnChange = (event) => {\n    this.setState({\n      editInput: event.target.value,\n      error: null,\n    });\n  };\n  sortByDate = async (sortOrder) => {\n    try {\n      let sortedGroceryItems = await Axios.get(\n        `/grocery/get-grocery-by-sort?sort=${sortOrder}`\n      );\n      this.setState({\n        groceryList: sortedGroceryItems.data.payload,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  sortByPurchased = async (isPurchased) => {\n    try {\n      let isPurchasedGroceryArray = await Axios.get(\n        `/grocery/get-grocery-by-purchased?isPurchased=${isPurchased}`\n      );\n      this.setState({\n        groceryList: isPurchasedGroceryArray.data.payload,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  render() {\n    return (\n      <div\n        style={{\n          backgroundImage:\n            'linear-gradient(rgba(0, 0, 0, 0.1),rgba(0, 0, 0, 0.5)), url(banner.png)',\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n          backgroundRepeat: 'no-repeat',\n          overflow: 'hidden',\n          backgroundAttachment: 'fixed',\n          width: '100vw',\n          height: '100vh',\n          // overflowY: 'scroll'\n        }}\n      >\n        <div id='container'>\n          <div id='app'>\n            <div className='top-container'>\n              <div id='header'>\n                <h1>Shopping List</h1>\n              </div>\n              <div id='input_field'>\n                {this.state.canEdit ? (\n                  <input\n                    className='form-control'\n                    type='text'\n                    value={this.state.editInput}\n                    onChange={this.handleEditOnChange}\n                    maxLength='26'\n                    name='editInput'\n                  />\n                ) : (\n                  <input\n                    className='form-control'\n                    type='text'\n                    value={this.state.groceryInput}\n                    onChange={this.handleInputOnChange}\n                    maxLength='26'\n                    placeholder='grocery item...'\n                    name='input'\n                    autoFocus\n                  />\n                )}\n                {this.state.canEdit ? (\n                  <Button\n                    className='btn'\n                    handleClickFunction={() => this.handleEditByID2()}\n                    buttonName='edit'\n                  />\n                ) : (\n                  <Button\n                    className='btn'\n                    handleClickFunction={() => this.handleOnSubmit()}\n                    buttonName='submit'\n                  />\n                )}\n              </div>\n              <div id='input_field2'>\n                <Button\n                  className='btn'\n                  handleClickFunction={() => this.sortByDate('desc')}\n                  buttonName='newest-to-oldest'\n                />\n                <Button\n                  className='btn'\n                  handleClickFunction={() => this.sortByDate('asc')}\n                  buttonName='oldest-to-newest'\n                />\n                <Button\n                  className='btn'\n                  handleClickFunction={() => this.sortByPurchased('true')}\n                  buttonName='purchased'\n                />\n                <Button\n                  className='btn'\n                  handleClickFunction={() => this.sortByPurchased('false')}\n                  buttonName=' not-purchased'\n                />\n              </div>\n            </div>\n            <div className='bottom-container'>\n              <span style={{ color: 'red' }}>\n                {this.state.error && this.state.errorMessage}\n              </span>\n              <div id='task-field'>\n                <div id='task-list'>\n                  {this.state.groceryList.map((item, index) => {\n                    return (\n                      <GroceryList\n                        key={item._id}\n                        item={item.grocery}\n                        purchased={item.purchased}\n                        handleDeleteByID={this.handleDeleteByID}\n                        handleCheckboxChecked={this.handleCheckboxChecked}\n                        handleDoneByID={this.handleDoneByID}\n                        handleEditByID1={this.handleEditByID1}\n                        inputID={item._id}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Grocery;\n","import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport Axios from '../utils/Axios';\n\nexport class FriendList extends Component {\n  state = {\n    toggle: false,\n    firstName: '',\n    lastName: '',\n    mobileNumber: '',\n  };\n\n  handleToggle = () => {\n    this.setState((prevState) => {\n      return {\n        toggle: !prevState.toggle,\n      };\n    });\n  };\n\n  handleUpdateFriendChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleUpdateClick = async (id) => {\n    try {\n      let updatedFriend = await Axios.put(`/friend/update-friend-by-id/${id}`, {\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        mobileNumber: this.state.mobileNumber,\n      });\n      this.props.handleUpdatedFriendData(updatedFriend.data.payload);\n      this.handleToggle();\n    } catch (e) {\n      toast.error(e.response.data.payload);\n    }\n  };\n\n  handleDeleteClick = async (id) => {\n    try {\n      let deletedFriend = await Axios.delete(\n        `/friend/delete-friend-by-id/${id}`\n      );\n      this.props.handleDeleteByFriend(deletedFriend.data.payload);\n    } catch (e) {\n      toast.error(e.response.data.payload);\n    }\n  };\n\n  render() {\n    const { friend } = this.props;\n    const { toggle } = this.state;\n    return (\n      <tr key={friend._id}>\n        {toggle ? (\n          <>\n            <td>\n              <input\n                name='firstName'\n                onChange={this.handleUpdateFriendChange}\n                defaultValue={friend.firstName}\n              />\n            </td>\n            <td>\n              <input\n                name='lastName'\n                onChange={this.handleUpdateFriendChange}\n                defaultValue={friend.lastName}\n              />\n            </td>\n            <td>\n              <input\n                name='mobileNumber'\n                onChange={this.handleUpdateFriendChange}\n                defaultValue={friend.mobileNumber}\n              />\n            </td>\n          </>\n        ) : (\n          <>\n            <td>{friend.firstName} </td>\n            <td>{friend.lastName} </td>\n            <td>{friend.mobileNumber}</td>\n          </>\n        )}\n        {toggle ? (\n          <td onClick={() => this.handleUpdateClick(friend._id)}>update</td>\n        ) : (\n          <td onClick={this.handleToggle}>Edit</td>\n        )}\n        <td onClick={() => this.handleDeleteClick(friend._id)}>Delete</td>\n      </tr>\n    );\n  }\n}\nexport default FriendList;\n","import React, { Component } from 'react';\nimport FriendList from './FriendList';\nexport class Friend extends Component {\n  render() {\n    return (\n      <div className=\"update-container\">\n        <table id=\"friends\">\n          <thead>\n            <tr id=\"tr\">\n              <th>first name</th>\n              <th>last name</th>\n              <th>mobile number</th>\n              <th>edit</th>\n              <th>Delete</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.friendArray.map((friend) => {\n              return (\n                <FriendList\n                  handleUpdatedFriendData={this.props.handleUpdatedFriendData}\n                  handleDeleteByFriend={this.props.handleDeleteByFriend}\n                  key={friend._id}\n                  friend={friend}\n                />\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\nexport default Friend;\n","import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport Friends from './Friends';\nimport Axios from '../utils/Axios';\nimport './Friends.css';\nexport class CreateFriend extends Component {\n  state = {\n    friendFirstName: '',\n    friendLastName: '',\n    friendMobileNumber: '',\n    friendArray: [],\n  };\n  componentDidMount() {\n    this.handleGetAllFriends();\n  }\n  handleOnFriendChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n  handleFriendSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let createdFriend = await Axios.post('/friend/create-friend', {\n        firstName: this.state.friendFirstName,\n        lastName: this.state.friendLastName,\n        mobileNumber: this.state.friendMobileNumber,\n      });\n      this.setState({\n        friendFirstName: '',\n        friendLastName: '',\n        friendMobileNumber: '',\n        friendArray: [...this.state.friendArray, createdFriend.data],\n      });\n      toast.success('Friend Created!');\n    } catch (e) {\n      toast.error(e.response.data.payload);\n    }\n  };\n  handleGetAllFriends = async () => {\n    try {\n      let getAllFriends = await Axios.get('/friend/get-all-friends');\n      this.setState({\n        friendArray: getAllFriends.data.friends,\n      });\n    } catch (e) {\n      toast.error(e.response.data.payload);\n    }\n  };\n\n  handleUpdatedFriendData = (updatedFriend) => {\n    let updatedFriendArray = this.state.friendArray.map((friend) => {\n      if (friend._id === updatedFriend._id) {\n        friend = updatedFriend;\n      }\n      return friend;\n    });\n\n    this.setState({\n      friendArray: updatedFriendArray,\n    });\n  };\n\n  handleDeleteByFriend = (user) => {\n    let newArray = this.state.friendArray.filter(\n      (friend) => friend._id !== user._id\n    );\n    this.setState({\n      friendArray: newArray,\n    });\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          backgroundImage:\n            'linear-gradient(rgba(0, 0, 0, 0.1),rgba(0, 0, 0, 0.5)), url(banner.png)',\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n          backgroundRepeat: 'no-repeat',\n          overflow: 'hidden',\n          backgroundAttachment: 'fixed',\n          width: '100vw',\n          height: '100vh',\n          // overflowY: 'scroll'\n        }}\n      >\n        <div className='update-container'>\n          <Friends\n            friendArray={this.state.friendArray}\n            handleUpdatedFriendData={this.handleUpdatedFriendData}\n            handleDeleteByFriend={this.handleDeleteByFriend}\n          />\n          <form id='friends-form' onSubmit={this.handleFriendSubmit}>\n            <h3>Create Friend</h3>\n            <div className='input-div'>\n              <input\n                className='form-control-friends'\n                placeholder='first name'\n                onChange={this.handleOnFriendChange}\n                name='friendFirstName'\n                value={this.state.friendFirstName}\n                autoFocus\n              />\n            </div>\n            <div className='input-div'>\n              <input\n                className='form-control-friends'\n                placeholder='last name'\n                onChange={this.handleOnFriendChange}\n                name='friendLastName'\n                value={this.state.friendLastName}\n              />\n            </div>\n            <div>\n              <input\n                className='form-control-friends'\n                placeholder='mobile number'\n                onChange={this.handleOnFriendChange}\n                name='friendMobileNumber'\n                value={this.state.friendMobileNumber}\n              />\n            </div>\n            <div>\n              <button className='btn'>Create Friend</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\nexport default CreateFriend;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport checkIfUserIsAuth from \"../utils/checkIsUserIsAuth\";\n\n// Higher Order Component\nconst PrivateRoute = ({ component: Component, handleUserLogout, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(routerProps) =>\n        checkIfUserIsAuth() ? (\n          <Component {...routerProps} handleUserLogout={handleUserLogout} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n};\nexport default PrivateRoute;\n\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Signup from './components/Signup/Signup';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport Nav from './components/Nav/Nav';\nimport Recipe from './components/Recipe/Recipe';\nimport SavedRecipes from './components/SavedRecipes/SavedRecipes';\nimport Grocery from './components/Grocery/Grocery';\nimport Friends from './components/Friends/CreateFriend';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\n\nconst MainRouter = (props) => {\n  return (\n    <Router>\n      <Nav user={props.user} handleUserLogout={props.handleUserLogout} />\n\n      <>\n        <PrivateRoute exact path='/friends' component={Friends} />\n\n        <PrivateRoute exact path='/grocery' component={Grocery} />\n\n        <PrivateRoute exact path='/recipe' component={Recipe} />\n\n        <PrivateRoute exact path='/saved-recipes' component={SavedRecipes} />\n\n        <Route exact path='/sign-up' component={Signup} />\n\n        <Route\n          exact\n          path='/login'\n          render={(routerProps) => (\n            <Login {...routerProps} handleUserLogin={props.handleUserLogin} />\n          )}\n        />\n\n        <Route\n          exact\n          path='/'\n          render={(routerProps) => (\n            <Home {...routerProps} handleUserLogin={props.handleUserLogin} />\n          )}\n        />\n      </>\n    </Router>\n  );\n};\n\nexport default MainRouter;\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport jwtDecode from 'jwt-decode';\nimport MainRouter from './MainRouter';\nimport setAxiosAuthToken from './components/utils/setAxiosAuthToken';\nimport './App.css';\nimport 'react-toastify/dist/ReactToastify.css';\nexport class App extends Component {\n  state = {\n    user: null,\n  };\n\n  componentDidMount() {\n    let getJwtToken = window.localStorage.getItem('jwtToken');\n    if (getJwtToken) {\n      const currentTime = Date.now() / 1000;\n      let decodedJWTToken = jwtDecode(getJwtToken);\n      if (decodedJWTToken.exp < currentTime) {\n        //logout\n        this.handleUserLogout();\n      } else {\n        //login\n        this.handleUserLogin(decodedJWTToken);\n      }\n    }\n  }\n\n  handleUserLogin = (user) => {\n    this.setState({\n      user: {\n        email: user.email,\n      },\n    });\n  };\n\n  handleUserLogout = () => {\n    window.localStorage.removeItem('jwtToken');\n    setAxiosAuthToken(null);\n    this.setState({\n      user: null,\n    });\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          backgroundImage:\n            'linear-gradient(rgba(0, 0, 0, 0.1),rgba(0, 0, 0, 0.5)), url(banner.png)',\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n          backgroundRepeat: 'no-repeat',\n          overflow: 'auto',\n          backgroundAttachment: 'fixed',\n        }}\n      >\n        <ToastContainer position='top-center' />\n        <MainRouter\n          user={this.state.user}\n          handleUserLogin={this.handleUserLogin}\n          handleUserLogout={this.handleUserLogout}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// import './_base.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}